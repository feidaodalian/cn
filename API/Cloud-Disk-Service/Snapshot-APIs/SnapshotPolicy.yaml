swagger: "2.0"
info:
  version: "v1"
  title: 快照策略相关接口
  description: 云硬盘相关接口，快照策略的创建，更新，删除，查询，绑定/解绑磁盘等接口。

basePath: /regions/{regionId}

schemes:
  - https

paths:
  "/snapshotPolicy":
    ###################### 创建快照策略接口 ######################
    post:
      description: "创建快照策略"
      summary: "创建快照策略"
      operationId: createSnapshotPolicy
      parameters:
        - name: name
          in: query
          required: true
          description: "策略名称"
          type: string
        - name: interval
          in: query
          type: integer
          required: true
          description: "策略执行周期，单位:秒，不小于12小时"
        - name: effectiveTime
          in: query
          type: string
          required: true
          description: "策略生效时间，格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`"
        - name: snapshotLifecycle
          in: query
          type: integer
          required: true
          description: "快照保留时间，单位:秒，0:表示不删除"
        - name: contactInfo
          in: body
          schema:
            $ref: "../model/ContactInfo.yaml#/definitions/contactInfo"
          required: false
          description: "联系人信息"
        - name: status
          in: query
          type: integer
          required: true
          description: "策略状态。1:启用 2:禁用"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                type: object
                description: "快照策略"
                properties:
                  id:
                    type: string
                    description: 是否发送短信。0:不发送 1:发送
                  name:
                    type: string
                    description: 是否发送短信。0:不发送 1:发送
                  pin:
                    type: string
                    description: 用户pin
                  interval:
                    type: integer
                    description: 策略执行间隔，单位:秒
                  effectiveTime:
                    type: string
                    description: 策略生效时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  lastTriggerTime:
                    type: string
                    description: 策略上次执行时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  nextTriggerTime:
                    type: string
                    description: 策略下次执行时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  snapshotLifecycle:
                    type: integer
                    description: 快照保留时间。单位:秒。0：永久保留
                  contactInfo:
                    $ref: "../model/ContactInfo.yaml#/definitions/contactInfo"
                    description: 联系人信息
                  createTime:
                    type: string
                    description: 策略下次执行时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  updateTime:
                    type: string
                    description: 策略下次执行时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  status:
                    type: integer
                    description: 策略状态。1：启用 2：禁用
                  diskCount:
                    type: integer
                    description: 策略绑定的disk数量

              requestId:
                type: string
                description: "请求ID"
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        429:
          description: "Quota exceeded"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
      x-jdcloud-request-example: |
        - 请求示例
        ```JSON
        curl --location --request POST 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapshotPolicy' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
              --data '{
                    "name": "SnapPolicy-test",
                    "interval":46800,
                    "effectiveTime":"2021-08-11T19:00:22+08:00",
                    "snapshotLifecycle":86400,
                    "contactInfo": {
                      "sms": 0,
                      "email": 1,
                      "personIds": [],
                      "groupIds": []
                    },
                    "status": 1
                }'   
        ```
        - 返回示例
        ```JSON
          {
            "requestId": "ihovct7i8d",
            "result": {
                "id": "ss-policy-**********",
                "name": "SnapPolicy-test",
                "pin": "iass10",
                "interval": 46800,
                "effectiveTime": "2021-08-11T19:00:22+08:00",
                "lastTriggerTime": "0001-01-01T08:00:00+08:00",
                "nextTriggerTime": "2021-08-11T19:00:22+08:00",
                "snapshotLifecycle": 86400,
                "contactInfo": {
                    "ydPin": "",
                    "sms": 0,
                    "email": 1,
                    "personIds": [],
                    "groupIds": []
                },
                "createTime": "2021-08-11T18:47:18+08:00",
                "updateTime": "2021-08-11T18:47:18+08:00",
                "status": 1,
                "diskCount": 0
            }
          }
        ```
  ###################### 修改快照策略接口 ######################
  "/snapshotPolicy/{policyId}":
    patch:
      description: "修改快照策略"
      summary: "修改快照策略"
      operationId: updateSnapshotPolicy
      parameters:
        - name: name
          in: query
          required: true
          description: "策略名称"
          type: string
        - name: interval
          in: query
          type: integer
          required: true
          description: "策略执行周期，单位:秒，不小于12小时"
        - name: effectiveTime
          in: query
          type: string
          required: true
          description: "策略生效时间，格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`"
        - name: snapshotLifecycle
          in: query
          type: integer
          required: true
          description: "快照保留时间，单位:秒，0:表示不删除"
        - name: contactInfo
          in: body
          schema:
            $ref: "../model/ContactInfo.yaml#/definitions/contactInfo"
          required: false
          description: "联系人信息"
        - name: status
          in: query
          type: integer
          required: true
          description: "策略状态。1:启用 2:禁用"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                type: object
                description: "快照策略"
                properties:
                  id:
                    type: string
                    description: 是否发送短信。0:不发送 1:发送
                  name:
                    type: string
                    description: 是否发送短信。0:不发送 1:发送
                  pin:
                    type: string
                    description: 用户pin
                  interval:
                    type: integer
                    description: 策略执行间隔，单位:秒
                  effectiveTime:
                    type: string
                    description: 策略生效时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  lastTriggerTime:
                    type: string
                    description: 策略上次执行时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  nextTriggerTime:
                    type: string
                    description: 策略下次执行时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  snapshotLifecycle:
                    type: integer
                    description: 快照保留时间。单位:秒。0：永久保留
                  contactInfo:
                    $ref: "../model/ContactInfo.yaml#/definitions/contactInfo"
                    description: 联系人信息
                  createTime:
                    type: string
                    description: 策略下次执行时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  updateTime:
                    type: string
                    description: 策略下次执行时间。格式`YYYY-MM-DDTHH:mm:ss+xx:xx`。如`2020-02-02T20:02:00+08:00`
                  status:
                    type: integer
                    description: 策略状态。1：启用 2：禁用
                  diskCount:
                    type: integer
                    description: 策略绑定的disk数量
              requestId:
                type: string
                description: "请求ID"
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        429:
          description: "Quota exceeded"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
      x-jdcloud-request-example: |
        - 请求示例
        ```JSON
        curl --location --request PATCH 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapshotPolicy/{policyId}' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
              --data '{
                    "name": "SnapPolicy-test-update",
                    "interval":46800,
                    "effectiveTime":"2021-08-11T19:00:22+08:00",
                    "snapshotLifecycle":86400,
                    "contactInfo": {
                      "sms": 0,
                      "email": 1,
                      "personIds": [],
                      "groupIds": []
                    },
                    "status": 1
                }'   
        ```
        - 返回示例
          ```JSON
          {
            "requestId": "v6coa5ekkg",
            "result": {
                "id": "ss-policy-**********",
                "name": "SnapPolicy-test-update",
                "pin": "iass10",
                "interval": 46800,
                "effectiveTime": "2021-08-11T19:00:22+08:00",
                "lastTriggerTime": "0001-01-01T08:00:00+08:00",
                "nextTriggerTime": "2021-08-11T19:00:22+08:00",
                "snapshotLifecycle": 86400,
                "contactInfo": {
                    "ydPin": "",
                    "sms": 0,
                    "email": 1,
                    "personIds": [],
                    "groupIds": []
                },
                "createTime": "2021-08-11T18:47:18+08:00",
                "updateTime": "2021-08-11T18:47:18+08:00",
                "status": 1,
                "diskCount": 0
            }
          }
        ```

  ###################### 删除快照策略接口 ######################
    delete:
      description: "删除快照策略"
      summary: "删除快照策略"
      operationId: deleteSnapshotPolicy
      responses:
        200:
          description: OK
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
      x-jdcloud-request-example: |
        - 请求示例
        ```JSON
        curl --location --request DELETE 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapshotPolicy/{policyId}' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
                }'   
        ```
        - 返回示例
          ```JSON
          {
            "requestId": "v6coa5ekkg"
          }
        ```
  ###################### 查询快照策略接口 ######################
  "/snapshotPolicies:describe":
    post:
      description: "查询快照策略"
      summary: "查询快照策略"
      operationId: describeSnapshotPolicies
      parameters:
        - name: name
          in: query
          required: false
          description: "策略名称,默认为空"
          type: string
        - name: policyId
          in: query
          type: array
          items:
            type: string
          required: false
          description: "策略ID,默认为空"
        - name: status
          in: query
          type: array
          items:
            type: integer
          required: false
          default: 1
          description: "策略状态。1: 启用 2：禁用"
        - name: order
          in: body
          schema:
            $ref: "../model/OrderItem.yaml#/definitions/orderItem"
          required: false
          description: "排序字段，只支持create_time和update_time字段"
        - name: pageNumber
          in: query
          type: integer
          default: 1
          minimum: 1
          description: "页码, 默认为1, 取值范围：[1,∞)"
        - name: pageSize
          in: query
          type: integer
          default: 20
          minimum: 10
          maximum: 100
          description: "分页大小，默认为20，取值范围：[10,100]"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                type: object
                description: "查询结果集"
                properties:
                  policies:
                    type: array
                    description: "查询的快照策略详情列表"
                    items:
                      $ref: "../model/SnapshotPolicy.yaml#/definitions/snapshotPolicy"
                  totalCount:
                    type: integer
                    description: "查询的快照策略数目"
              requestId:
                type: string
                description: "请求ID"
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
      x-jdcloud-request-example: |
        - 请求示例
        ```JSON
        curl --location --request POST 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapshotPolicies:describe' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
              --data '{
                  "policyId":["ss-policy-6bj6u0q616"]
                }'   
        ```
        - 返回示例
          ```JSON
          {
            "requestId": "8q27fg09p2",
            "result": {
                "totalCount": 1,
                "policies": [
                    {
                        "id": "ss-policy-**********",
                        "name": "SnapPolicy-test",
                        "pin": "iass10",
                        "interval": 46800,
                        "effectiveTime": "2021-08-11T19:50:22+08:00",
                        "lastTriggerTime": "2021-08-11T19:50:22+08:00",
                        "nextTriggerTime": "2021-08-12T08:50:22+08:00",
                        "snapshotLifecycle": 86400,
                        "contactInfo": {
                            "ydPin": "",
                            "sms": 0,
                            "email": 1,
                            "personIds": [],
                            "groupIds": []
                        },
                        "createTime": "2021-08-11T19:43:57+08:00",
                        "updateTime": "2021-08-11T19:50:27+08:00",
                        "status": 1,
                        "diskCount": 0
                    }
                ]
            }
          }
        ```

  "/snapPolicies:describe":
    ###################### 查询快照策略接口 ######################
    post:
      description: |
        -   查询您已经创建的快照策略。
        -   filters多个过滤条件之间是逻辑与(AND)，每个条件内部的多个取值是逻辑或(OR)
      summary: "查询快照策略"
      operationId: DescribeSnapPolices
      parameters:
      - name: filterGroups
        in: query
        required: false
        type: array
        description: "过滤条件"
        items:
          $ref: "../model/FilterGroups.yaml#/definitions/filterGroups"
      - name: order
        in: body
        schema:
          $ref: "../model/OrderItem.yaml#/definitions/orderItem"
        required: false
        description: "排序字段，只支持create_time和update_time字段"
      - name: pageNumber
        in: query
        type: integer
        default: 1
        minimum: 1
        description: "页码, 默认为1, 取值范围：[1,∞)"
      - name: pageSize
        in: query
        type: integer
        default: 20
        minimum: 10
        maximum: 100
        description: "分页大小，默认为20，取值范围：[10,100]"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                type: object
                description: "查询结果集"
                properties:
                  policies:
                    type: array
                    description: "查询的快照策略详情列表"
                    items:
                      $ref: "../model/SnapshotPolicy.yaml#/definitions/snapshotPolicy"
                  totalCount:
                    type: integer
                    description: "查询的快照策略数目"
              requestId:
                type: string
                description: "请求ID"
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
      x-jdcloud-request-example: |
       - 请求示例
       #### 示例一: filters为空,返回全部查询个数
       ```JSON
       curl --location --request POST 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapPolicies:describe' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
              --data '{
                "filterGroups":[
                  {
                      "filters":[
                          {
                            
                          }
                      ]
                  }
              }'
       ```
       #### 示例二: 按policyId策略Id查询
       ```JSON
       curl --location --request POST 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapPolicies:describe' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
              --data '{
                "filterGroups":[
                  {
                      "filters":[
                          {
                              "name":"policyId",
                              "values":["ss-policy-1manr8l62m"]
                          }
                      ]
                  }
              }'
       ```
        
       #### 示例三:组合查询(name和status)
       ```JSON
       curl --location --request POST 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapPolicies:describe' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
              --data '{
                "filterGroups":[
                  {
                      "filters":[
                          {
                              "name":"name",
                              "values":["SnapPolicy-test"]
                          },
                          {
                              "name":"status",
                              "values":[1]
                          }
                      ]
                  }
              }'
       ```

       - 返回示例 
       #### 如按查询条件查询失败，则返回如下：
       ```JSON
       {
            "requestId": "18c5027iys",
            "result": {
                "totalCount": 0,
                "disks": null
            }
       } 
       ```
       #### 若按上述请求示例三查询成功，则返回如下：
       ```JSON
       {
          "requestId": "bxyxzvqrvg",
          "result": {
              "totalCount": 1,
              "policies": [
                  {
                      "id": "ss-policy-**********",",
                      "name": "SnapPolicy-test",
                      "pin": "iass10",
                      "interval": 46800,
                      "effectiveTime": "2021-08-11T19:50:22+08:00",
                      "lastTriggerTime": "2021-08-16T03:50:22+08:00",
                      "nextTriggerTime": "2021-08-16T16:50:22+08:00",
                      "snapshotLifecycle": 86400,
                      "contactInfo": {
                          "ydPin": "",
                          "sms": 0,
                          "email": 1,
                          "personIds": [],
                          "groupIds": []
                      },
                      "createTime": "2021-08-11T19:43:57+08:00",
                      "updateTime": "2021-08-16T03:50:22+08:00",
                      "status": 1,
                      "diskCount": 0
                  } 
                ]
              }
        }
       ```  
        
  "/snapshotPolicies:apply":
    post:
      description: "绑定/解绑快照策略与磁盘关系"
      summary: "绑定/解绑快照策略与磁盘关系"
      operationId: applySnapshotPolicies
      parameters:
        - name: relations
          in: query
          type: array
          items:
            $ref: "../model/PolicyDiskRelationOp.yaml#/definitions/policyDiskRelationOp"
          required: false
          description: "绑定/解绑操作"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                type: object
                description: "操作结果集"
                properties:
                  opResults:
                    type: array
                    description: "绑定/解绑 快照策略 与 磁盘 的操作结果列表"
                    items:
                      $ref: "../model/PolicyDiskRelationOp.yaml#/definitions/policyDiskRelationOpResult"
              requestId:
                type: string
                description: "请求ID"
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
      x-jdcloud-request-example: |
        - 请求示例
        ```JSON
        curl --location --request POST 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapshotPolicies:apply' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
              --data '{
                  "relations": [
                      {
                        "diskId": "vol-**********",",
                        "diskRegion": "cn-south-1",
                        "policyId":"ss-policy-**********",",
                        "op":1
                    }
                  ]
                }'   
        ```
        - 返回示例
        ```JSON
          {
            "requestId": "lmrzd6wkxj",
            "result": {
                "opResults": [
                    {
                        "code": 0,
                        "message": "",
                        "diskId": "vol-**********",
                        "diskRegion": "cn-south-1",
                        "policyId": "ss-policy-**********",",
                        "op": 1
                    }
                ]
            }
        }
        ```
          
  ###################### 描述快照策略接口 ######################
  "/snapshotPolicyDiskRelations:describe":
    post:
      description: "查询快照策略与磁盘绑定关系"
      summary: "查询快照策略与磁盘绑定关系"
      operationId: describeSnapshotPolicyDiskRelations
      parameters:
        - name: diskId
          in: query
          type: array
          items:
            type: string
          required: false
          description: "磁盘ID"
        - name: diskRegion
          in: query
          type: array
          items:
            type: string
          required: false
          description: "磁盘地域ID"
        - name: policyId
          in: query
          type: array
          items:
            type: string
          required: false
          description: "策略ID"
        - name: pageNumber
          in: query
          type: integer
          default: 1
          minimum: 1
          description: "页码, 默认为1, 取值范围：[1,∞)"
        - name: pageSize
          in: query
          type: integer
          default: 20
          minimum: 10
          maximum: 100
          description: "分页大小，默认为20，取值范围：[10,100]"
      responses:
        200:
          description: OK
          schema:
            properties:
              result:
                type: object
                description: "查询结果集"
                properties:
                  totalCount:
                    type: integer
                    description: "总数量"
                  relationResults:
                    type: array
                    description: "绑定关系"
                    items:
                      $ref: "../model/DescSnapshotRelationsData.yaml#/definitions/descSnapshotRelationsData"
              requestId:
                type: string
                description: "请求ID"
        400:
          description: "Invalid parameter"
        401:
          description: "Authentication failed"
        404:
          description: "Not found"
        500:
          description: "Internal server error"
        503:
          description: "Service unavailable"
      x-jdcloud-request-example: |
        - 请求示例
        ```JSON
        curl --location --request POST 'https://disk.jdcloud-api.com/v1/regions/{regionId}/snapshotPolicyDiskRelations:describe' 
              --header 'x-jcloud-pin: **********' 
              --header 'Content-Type: application/json' 
              --data '{
                  "relations": [
                      {
                         "diskId":["vol-**********"],
                         "diskRegion":["cn-south-1"]
                         "policyId":["ss-policy-**********"]
                    }
                  ]
                }'   
        ```
        - 返回示例
        ```JSON
        {
          "requestId": "rwu5q0mg00",
          "result": {
              "totalCount": 1,
              "relationResults": [
                  {
                      "diskId": "vol-**********",
                      "diskRegion": "cn-south-1",
                      "policyId": "ss-policy-**********",
                      "createTime": "2021-08-16T12:45:53+08:00"
                  }
              ]
          }
        }
        ```
parameters:
  regionId:
    name: regionId
    in: path
    required: true
    type: string
    description: 地域ID
  policyId:
    name: policyId
    in: path
    required: true
    type: string
    description: 策略ID
